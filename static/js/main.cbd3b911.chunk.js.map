{"version":3,"sources":["Scene.js","App.js","index.js"],"names":["OrbitControls","threeOrbitControls","THREE","Scene","props","context","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","hoverColor","selectedColor","mouse","raycaster","cameraVectoring","lightPosition","_this2","rendererElement","ReactDOM","findDOMNode","refs","renderer","controls","camera","addEventListener","event","onCameraChange","target","object","position","e","onMouseMove","onMouseDown","dispose","removeEventListener","intersect","getObjectsUnderMouse","onCubeSelect","name","onCubeHover","mouseEvent","x","clientX","containerWidth","y","clientY","getBoundingClientRect","containerHeight","setFromCamera","intersectObjects","scene","children","_this3","cubeSize","cameraPosition","cubes","map","o","color","id","toString","selectedCubeId","hoveredCubeId","react_default","a","createElement","key","width","height","depth","React3_default","antialias","clearColor","mainCamera","ref","fov","aspect","near","far","lookAt","intensity","Component","Dimensions","containerStyle","left","right","top","bottom","BasicControls","className","buttons","icon","large","onClick","onAddCube","cubeCount","disabled","isCameraDefault","minimal","onResetCamera","SizeControls","iconSize","slider","min","max","stepSize","labelStepSize","labelRenderer","onChange","onValueChange","value","isDefaultValue","onResetValue","ActiveObjectControls","popover","Position","BOTTOM_LEFT","intent","Intent","WARNING","style","backgroundColor","selectedCubeColor","lib","disableAlpha","onChangeComplete","onCubeColorChange","BOTTOM_RIGHT","DANGER","html","Classes","POPOVER_DISMISS","marginRight","onRemoveCube","SceneControls","App_BasicControls","App_SizeControls","isCubeDefaultSize","onCubeSizeChange","onResetCubeSize","App_ActiveObjectControls","App","idCounter","defaultCubeSize","defaultCameraPosition","state","cube","randomColorHex","randomPosition","randomRGBAsHex","hex","Number","Math","floor","random","length","setState","clone","newArray","toConsumableArray","i","size","slice","concat","generateCube","indxToRemove","splice","container","App_SceneControls","equals","handleAddCube","handleCubeColorChange","handleCubeSizeChange","handleRemoveCube","handleResetCamera","handleResetCubeSize","src_Scene","handleCameraChange","handleCubeHover","handleCubeSelect","render","src_App_0","document","getElementById"],"mappings":"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","file":"static/js/main.cbd3b911.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './App.css';\r\nimport React3 from 'react-three-renderer';\r\nimport * as THREE from 'three'\r\nimport threeOrbitControls from 'three-orbit-controls';\r\nimport Dimensions from 'react-dimensions'\r\n\r\nvar OrbitControls = threeOrbitControls(THREE);\r\n\r\nclass Scene extends Component {\r\n    constructor(props, context) {\r\n        super(props, context);\r\n        \r\n        // Use 'new' here rather than within render, otherwise it messes with React change detection.\r\n        this.hoverColor = '#691919';\r\n        this.selectedColor = '#a50909';\r\n\r\n        this.mouse = new THREE.Vector2();\r\n        this.raycaster = new THREE.Raycaster();\r\n\r\n        this.cameraVectoring = new THREE.Vector3(0, 0, 0);\r\n        this.lightPosition = new THREE.Vector3(3, 13, 16);\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.rendererElement = ReactDOM.findDOMNode(this.refs.renderer);\r\n\r\n        const controls = new OrbitControls(this.refs.camera, this.rendererElement);\r\n        controls.addEventListener('change', (event) => { this.props.onCameraChange(event.target.object.position); });\r\n        this.controls = controls;\r\n\r\n        this.rendererElement.addEventListener('mousemove', (e) => { this.onMouseMove(e); }, false);\r\n        this.rendererElement.addEventListener('mousedown', (e) => { this.onMouseDown(e); }, false);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        this.controls.dispose();\r\n        delete this.controls;\r\n\r\n        this.rendererElement.removeEventListener('mousemove');\r\n        this.rendererElement.removeEventListener('mousedown');\r\n    }\r\n\r\n    onMouseDown(event) {\r\n        var intersect = this.getObjectsUnderMouse(event);\r\n        if (intersect[0]) {\r\n            this.props.onCubeSelect(intersect[0].object.name);\r\n        }\r\n    }\r\n\r\n    onMouseMove(event) {\r\n        var intersect = this.getObjectsUnderMouse(event);\r\n        if (intersect[0]) {\r\n            this.props.onCubeHover(intersect[0].object.name);\r\n        } else {\r\n            this.props.onCubeHover(null);\r\n        }\r\n    }\r\n\r\n    getObjectsUnderMouse(mouseEvent) {\r\n        // Convert to normalized device coordinates (-1 to +1) of renderer 'viewport'\r\n        // TODO: use this.rendererElement.getBoundingClientRect() to make this calculation generic\r\n        this.mouse.x = (mouseEvent.clientX / this.props.containerWidth) * 2 - 1;\r\n        this.mouse.y = - ((mouseEvent.clientY - this.rendererElement.getBoundingClientRect().y) / this.props.containerHeight) * 2 + 1;\r\n        this.raycaster.setFromCamera(this.mouse, this.refs.camera);\r\n\r\n        return this.raycaster.intersectObjects(this.refs.scene.children, false);\r\n    }\r\n\r\n    render() {\r\n        const containerWidth = this.props.containerWidth;\r\n        const containerHeight = this.props.containerHeight;\r\n        const cubeSize = this.props.cubeSize;\r\n        const cameraPosition = this.props.cameraPosition;\r\n\r\n        const cubes = this.props.cubes.map(o => {\r\n            let color = o.color;\r\n            const id = o.id.toString();\r\n            if (this.props.selectedCubeId === id) {\r\n                color = this.selectedColor;\r\n            } else if (this.props.hoveredCubeId === id) {\r\n                color = this.hoverColor;\r\n            }\r\n            return (<mesh\r\n                key={o.id}\r\n                position={o.position}\r\n                name={id}>\r\n                <boxGeometry\r\n                    width={cubeSize}\r\n                    height={cubeSize}\r\n                    depth={cubeSize}\r\n                />\r\n                <meshLambertMaterial\r\n                    color={color}\r\n                />\r\n            </mesh>);\r\n        });\r\n\r\n        return (\r\n            <React3\r\n                antialias\r\n                clearColor={0x2d2d2d}\r\n                mainCamera=\"mainCamera\"\r\n                width={containerWidth}\r\n                height={containerHeight}\r\n                ref=\"renderer\"\r\n            >\r\n                <scene ref=\"scene\">\r\n                    <perspectiveCamera\r\n                        name=\"mainCamera\"\r\n                        fov={55}\r\n                        aspect={containerWidth / containerHeight}\r\n                        near={0.1}\r\n                        far={1000}\r\n                        ref=\"camera\"\r\n                        lookAt={this.cameraVectoring}\r\n                        position={cameraPosition}\r\n                    />\r\n                    <ambientLight\r\n                        color={0xffffff}\r\n                    />\r\n                    <pointLight\r\n                        color={0xffffff}\r\n                        position={this.lightPosition}\r\n                        intensity={0.7}\r\n                    />\r\n                    {cubes}\r\n                </scene>\r\n            </React3>\r\n        );\r\n    }\r\n}\r\n\r\n// Wrapping scene in element which detects containers size as it changes\r\nexport default Dimensions({ containerStyle: { position: \"absolute\", left: 0, right: 0, top: 0, bottom: 0 } })(Scene)\r\n","import React, { Component } from 'react';\nimport './App.css';\nimport Scene from './Scene.js';\nimport { Button, Icon, Popover, Slider, Classes, Intent, H5, Position } from \"@blueprintjs/core\";\nimport * as THREE from 'three'\n\nimport { ChromePicker } from 'react-color';\n\nclass BasicControls extends Component {\n\trender() {\n\t\treturn (\n\t\t\t<div className=\"controls-row\">\n\t\t\t\t<Button\n\t\t\t\t\ticon=\"plus\"\n\t\t\t\t\tlarge={true}\n\t\t\t\t\tonClick={this.props.onAddCube}\n\t\t\t\t/>\n\t\t\t\t<span className=\"primary-text ellipsed-text\">{this.props.cubeCount} cubes in scene</span>\n\t\t\t\t<Button\n\t\t\t\t\tdisabled={this.props.isCameraDefault}\n\t\t\t\t\ticon=\"refresh\"\n\t\t\t\t\tminimal={true}\n\t\t\t\t\tonClick={this.props.onResetCamera}\n\t\t\t\t/>\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nclass SizeControls extends Component {\n\trender() {\n\t\treturn (\n\t\t\t<div className=\"controls-row\">\n\t\t\t\t<Icon\n\t\t\t\t\ticon=\"symbol-square\"\n\t\t\t\t\ticonSize={17}\n\t\t\t\t/>\n\t\t\t\t<div className=\"slider-container\">\n\t\t\t\t\t<Slider\n\t\t\t\t\t\tmin={0.2}\n\t\t\t\t\t\tmax={10}\n\t\t\t\t\t\tstepSize={0.1}\n\t\t\t\t\t\tlabelStepSize={9}\n\t\t\t\t\t\tlabelRenderer={false}\n\t\t\t\t\t\tonChange={this.props.onValueChange}\n\t\t\t\t\t\tvalue={this.props.value}\n\t\t\t\t\t/>\n\t\t\t\t</div>\n\t\t\t\t<Icon\n\t\t\t\t\ticon=\"symbol-square\"\n\t\t\t\t\ticonSize={40}\n\t\t\t\t/>\n\t\t\t\t<Button\n\t\t\t\t\tdisabled={this.props.isDefaultValue}\n\t\t\t\t\ticon=\"refresh\"\n\t\t\t\t\tminimal={true}\n\t\t\t\t\tonClick={this.props.onResetValue}\n\t\t\t\t/>\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nclass ActiveObjectControls extends Component {\n\trender() {\n\t\tconst id = this.props.selectedCubeId;\n\n\t\treturn (\n\t\t\t<div className=\"active-obj-controls\">\n\t\t\t\t<div className=\"controls-row\">\n\t\t\t\t\t<span className=\"primary-text ellipsed-text\"> Active Cube\n\t\t\t\t\t</span>\n\t\t\t\t\t<span><span className=\"primary-text\">ID:</span> {id} </span>\n\t\t\t\t</div>\n\t\t\t\t<div className=\"controls-row\">\n\t\t\t\t\t<Popover\n\t\t\t\t\t\tposition={Position.BOTTOM_LEFT}>\n\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\ticon=\"tint\"\n\t\t\t\t\t\t\tintent={Intent.WARNING}\n\t\t\t\t\t\t\tclassName=\"color-button\"\n\t\t\t\t\t\t\tstyle={{ backgroundColor: this.props.selectedCubeColor }}\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t<ChromePicker\n\t\t\t\t\t\t\t\tdisableAlpha={true}\n\t\t\t\t\t\t\t\tcolor={this.props.selectedCubeColor}\n\t\t\t\t\t\t\t\tonChangeComplete={(color) => { this.props.onCubeColorChange(id, color); }} />\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</Popover>\n\t\t\t\t\t<Popover\n\t\t\t\t\t\tposition={Position.BOTTOM_RIGHT}>\n\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\ticon=\"trash\"\n\t\t\t\t\t\t\tintent={Intent.DANGER}\n\t\t\t\t\t\t\tminimal={true}\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t<div\n\t\t\t\t\t\t\tkey=\"text\"\n\t\t\t\t\t\t\tclassName=\"popover-content\">\n\t\t\t\t\t\t\t<H5>Confirm Deletion</H5>\n\t\t\t\t\t\t\t<p>Are you sure you want to delete this?</p>\n\t\t\t\t\t\t\t<div className=\"popover-buttons\">\n\t\t\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\t\t\tclassName={Classes.POPOVER_DISMISS}\n\t\t\t\t\t\t\t\t\tstyle={{ marginRight: 10 }}>\n\t\t\t\t\t\t\t\t\tCancel\n                    \t\t\t</Button>\n\t\t\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\t\t\tintent={Intent.DANGER}\n\t\t\t\t\t\t\t\t\tclassName={Classes.POPOVER_DISMISS}\n\t\t\t\t\t\t\t\t\tonClick={() => this.props.onRemoveCube(id)}>\n\t\t\t\t\t\t\t\t\tDelete\n                    \t\t\t</Button>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</Popover>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nclass SceneControls extends Component {\n\trender() {\n\t\tconst selectedCubeId = this.props.selectedCubeId;\n\n\t\treturn (\n\t\t\t<div className=\"scene-controls\">\n\t\t\t\t<BasicControls\n\t\t\t\t\tcubeCount={this.props.cubeCount}\n\t\t\t\t\tonAddCube={this.props.onAddCube}\n\t\t\t\t\tonResetCamera={this.props.onResetCamera}\n\t\t\t\t\tisCameraDefault={this.props.isCameraDefault}\n\t\t\t\t/>\n\t\t\t\t<SizeControls\n\t\t\t\t\tvalue={this.props.cubeSize}\n\t\t\t\t\tisDefaultValue={this.props.isCubeDefaultSize}\n\t\t\t\t\tonValueChange={this.props.onCubeSizeChange}\n\t\t\t\t\tonResetValue={this.props.onResetCubeSize}\n\t\t\t\t/>\n\t\t\t\t{selectedCubeId &&\n\t\t\t\t\t<ActiveObjectControls\n\t\t\t\t\t\tselectedCubeColor={this.props.selectedCubeColor}\n\t\t\t\t\t\tselectedCubeId={selectedCubeId}\n\t\t\t\t\t\tonCubeColorChange={this.props.onCubeColorChange}\n\t\t\t\t\t\tonRemoveCube={this.props.onRemoveCube}\n\t\t\t\t\t/>}\n\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nclass App extends Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\n\t\tthis.idCounter = 0;\n\t\tthis.defaultCubeSize = 2;\n\t\tthis.defaultCameraPosition = new THREE.Vector3(10, 8, 15);\n\n\t\tthis.state = {\n\t\t\tcameraPosition: this.defaultCameraPosition,\n\t\t\tcubes: [],\n\t\t\tcubeSize: this.defaultCubeSize,\n\t\t\thoveredCubeId: null,\n\t\t\tselectedCubeColor: '',\n\t\t\tselectedCubeId: null\n\t\t}\n\t}\n\n\tgenerateCube() {\n\t\tconst cube = {\n\t\t\tcolor: this.randomColorHex(),\n\t\t\tid: this.idCounter,\n\t\t\tposition: this.randomPosition()\n\t\t};\n\t\tthis.idCounter++;\n\t\treturn cube;\n\t}\n\n\trandomColorHex() {\n\t\treturn '#' + this.randomRGBAsHex() + this.randomRGBAsHex() + this.randomRGBAsHex();\n\t}\n\n\trandomRGBAsHex() {\n\t\tlet hex = Number(Math.floor(Math.random() * 256)).toString(16);\n\t\treturn (hex.length < 2) ? \"0\" + hex : hex;\n\t}\n\n\trandomPosition() {\n\t\treturn new THREE.Vector3((Math.random() * 14) - 7, (Math.random() * 14) - 7, (Math.random() * 14) - 7);\n\t}\n\n\thandleCameraChange(position) {\n\t\tthis.setState({\n\t\t\tcameraPosition: position.clone()\n\t\t});\n\t}\n\n\thandleCubeColorChange(id, color) {\n\t\tlet newArray = [...this.state.cubes];\n\t\tfor (let i = 0; i < newArray.length; i++) {\n\t\t\tif (newArray[i].id.toString() === id) {\n\t\t\t\tnewArray[i].color = color.hex;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\tthis.setState({\n\t\t\tcubes: newArray,\n\t\t\tselectedCubeColor: color.hex\n\t\t});\n\t}\n\n\thandleCubeSizeChange(size) {\n\t\tthis.setState({\n\t\t\tcubeSize: size\n\t\t});\n\t}\n\n\thandleCubeHover(id) {\n\t\tif (id !== this.state.hoveredCubeId) {\n\t\t\tthis.setState({\n\t\t\t\thoveredCubeId: id\n\t\t\t});\n\t\t}\n\t}\n\n\thandleCubeSelect(id) {\n\t\tif (id !== this.state.selectedCubeId) {\n\t\t\tlet selectedCubeColor;\n\t\t\tfor (let i = 0; i < this.state.cubes.length; i++) {\n\t\t\t\tif (this.state.cubes[i].id.toString() === id) {\n\t\t\t\t\tselectedCubeColor = this.state.cubes[i].color;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tthis.setState({\n\t\t\t\tselectedCubeId: id,\n\t\t\t\tselectedCubeColor: selectedCubeColor\n\t\t\t});\n\t\t}\n\t}\n\n\thandleResetCamera() {\n\t\tthis.setState({\n\t\t\tcameraPosition: this.defaultCameraPosition.clone()\n\t\t});\n\t}\n\n\thandleResetCubeSize() {\n\t\tthis.setState({\n\t\t\tcubeSize: this.defaultCubeSize\n\t\t});\n\t}\n\n\thandleAddCube() {\n\t\tconst cubes = this.state.cubes.slice();\n\t\tthis.setState({\n\t\t\tcubes: cubes.concat([this.generateCube()])\n\t\t});\n\t}\n\n\thandleRemoveCube(id) {\n\t\tlet cubes = [...this.state.cubes];\n\t\tlet indxToRemove;\n\t\tfor (let i = 0; i < cubes.length; i++) {\n\t\t\tif (cubes[i].id.toString() === id) {\n\t\t\t\tindxToRemove = i;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\n\t\tif (indxToRemove != null) {\n\t\t\tcubes.splice(indxToRemove, 1);\n\t\t\tthis.setState({\n\t\t\t\tcubes: cubes,\n\t\t\t\tselectedCubeId: null\n\t\t\t});\n\t\t}\n\t}\n\n\trender() {\n\t\treturn (\n\t\t\t<div className=\"App\" ref={(container) => { this.container = container }}>\n\t\t\t\t<SceneControls\n\t\t\t\t\tcubeCount={this.state.cubes.length}\n\t\t\t\t\tcubeSize={this.state.cubeSize}\n\t\t\t\t\tisCameraDefault={this.state.cameraPosition.equals(this.defaultCameraPosition)}\n\t\t\t\t\tisCubeDefaultSize={(this.state.cubeSize === this.defaultCubeSize)}\n\t\t\t\t\tonAddCube={() => { this.handleAddCube(); }}\n\t\t\t\t\tonCubeColorChange={(id, color) => { this.handleCubeColorChange(id, color); }}\n\t\t\t\t\tonCubeSizeChange={(size) => { this.handleCubeSizeChange(size); }}\n\t\t\t\t\tonRemoveCube={(id) => { this.handleRemoveCube(id); }}\n\t\t\t\t\tonResetCamera={() => { this.handleResetCamera(); }}\n\t\t\t\t\tonResetCubeSize={() => { this.handleResetCubeSize(); }}\n\t\t\t\t\tselectedCubeColor={this.state.selectedCubeColor}\n\t\t\t\t\tselectedCubeId={this.state.selectedCubeId}\n\t\t\t\t/>\n\t\t\t\t<div className=\"scene-container\">\n\t\t\t\t\t<Scene\n\t\t\t\t\t\tcameraPosition={this.state.cameraPosition}\n\t\t\t\t\t\tcubes={this.state.cubes}\n\t\t\t\t\t\tcubeSize={this.state.cubeSize}\n\t\t\t\t\t\thoveredCubeId={this.state.hoveredCubeId}\n\t\t\t\t\t\tselectedCubeId={this.state.selectedCubeId}\n\t\t\t\t\t\tonCameraChange={(position) => { this.handleCameraChange(position); }}\n\t\t\t\t\t\tonCubeHover={(id) => { this.handleCubeHover(id); }}\n\t\t\t\t\t\tonCubeSelect={(id) => { this.handleCubeSelect(id); }}\n\t\t\t\t\t/>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n\t<App />,\n\tdocument.getElementById('root')\n);\n"],"sourceRoot":""}